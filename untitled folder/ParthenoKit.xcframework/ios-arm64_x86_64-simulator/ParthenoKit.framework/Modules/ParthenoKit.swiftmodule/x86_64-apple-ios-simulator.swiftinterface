// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ParthenoKit
@_exported import ParthenoKit
import Swift
import _Concurrency
@objc @_inheritsConvenienceInitializers public class ParthenoKit : ObjectiveC.NSObject {
  public var timeInterval: Swift.Double
  public var statusInterval: Swift.Double
  public var status: Swift.String
  public func initUser(team: Swift.String, appCode: Swift.String, userName: Swift.String, refreshRate: Swift.Int)
  public func getUsers(team: Swift.String, appCode: Swift.String, userName: Swift.String, refreshRate: Swift.Int, returnList: Swift.Bool, onlyOnlineUsers: Swift.Bool) -> [Swift.String : Swift.String]
  public func receiveUsers(team: Swift.String, appCode: Swift.String, userName: Swift.String, refreshRate: Swift.Int, completion: @escaping (Any) -> Swift.Void) -> Swift.Bool
  public func status(team: Swift.String, appCode: Swift.String, refreshRate: Swift.Int, userName: Swift.String, status: Swift.String, returnList: Swift.Bool, onlyOnlineUsers: Swift.Bool) -> [Swift.String : Swift.String]
  public func sendMessageSync(from: Swift.String, to: Swift.String, message: Swift.String) -> Swift.Bool
  public func sendMessageAsync(from: Swift.String, to: Swift.String, message: Swift.String, completion: @escaping (Swift.Bool) -> Swift.Void) -> Swift.Bool
  public func receiveMessageSync(receiver: Swift.String) -> [Swift.String : Swift.String]
  public func receiveMessageAsync(receiver: Swift.String, completion: @escaping (Any) -> Swift.Void) -> Swift.Bool
  public func receiveMessages(receiver: Swift.String, completion: @escaping (Any) -> Swift.Void) -> Swift.Bool
  public func writeSync(team: Swift.String, tag: Swift.String, key: Swift.String, value: Any) -> Swift.Bool
  public func readSync(team: Swift.String, tag: Swift.String, key: Swift.String) -> [Swift.String : Swift.String]
  public func writeAsync(team: Swift.String, tag: Swift.String, key: Swift.String, value: Any, completion: @escaping (Swift.Bool) -> Swift.Void) -> Swift.Bool
  public func readAsync(team: Swift.String, tag: Swift.String, key: Swift.String, completion: @escaping (Any) -> Swift.Void) -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
